// Code generated by protoc-gen-go. DO NOT EDIT.
// source: search.proto

package proto

import (
	context "context"
	fmt "fmt"
	math "math"

	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Document struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Content              string   `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Document) Reset()         { *m = Document{} }
func (m *Document) String() string { return proto.CompactTextString(m) }
func (*Document) ProtoMessage()    {}
func (*Document) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{0}
}

func (m *Document) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Document.Unmarshal(m, b)
}
func (m *Document) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Document.Marshal(b, m, deterministic)
}
func (m *Document) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Document.Merge(m, src)
}
func (m *Document) XXX_Size() int {
	return xxx_messageInfo_Document.Size(m)
}
func (m *Document) XXX_DiscardUnknown() {
	xxx_messageInfo_Document.DiscardUnknown(m)
}

var xxx_messageInfo_Document proto.InternalMessageInfo

func (m *Document) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Document) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type IndexRequest struct {
	Document             *Document `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *IndexRequest) Reset()         { *m = IndexRequest{} }
func (m *IndexRequest) String() string { return proto.CompactTextString(m) }
func (*IndexRequest) ProtoMessage()    {}
func (*IndexRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{1}
}

func (m *IndexRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IndexRequest.Unmarshal(m, b)
}
func (m *IndexRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IndexRequest.Marshal(b, m, deterministic)
}
func (m *IndexRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IndexRequest.Merge(m, src)
}
func (m *IndexRequest) XXX_Size() int {
	return xxx_messageInfo_IndexRequest.Size(m)
}
func (m *IndexRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IndexRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IndexRequest proto.InternalMessageInfo

func (m *IndexRequest) GetDocument() *Document {
	if m != nil {
		return m.Document
	}
	return nil
}

type SearchQuery struct {
	Query                string   `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SearchQuery) Reset()         { *m = SearchQuery{} }
func (m *SearchQuery) String() string { return proto.CompactTextString(m) }
func (*SearchQuery) ProtoMessage()    {}
func (*SearchQuery) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{2}
}

func (m *SearchQuery) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchQuery.Unmarshal(m, b)
}
func (m *SearchQuery) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchQuery.Marshal(b, m, deterministic)
}
func (m *SearchQuery) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchQuery.Merge(m, src)
}
func (m *SearchQuery) XXX_Size() int {
	return xxx_messageInfo_SearchQuery.Size(m)
}
func (m *SearchQuery) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchQuery.DiscardUnknown(m)
}

var xxx_messageInfo_SearchQuery proto.InternalMessageInfo

func (m *SearchQuery) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type SearchResults struct {
	Documents            []*Document `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SearchResults) Reset()         { *m = SearchResults{} }
func (m *SearchResults) String() string { return proto.CompactTextString(m) }
func (*SearchResults) ProtoMessage()    {}
func (*SearchResults) Descriptor() ([]byte, []int) {
	return fileDescriptor_453745cff914010e, []int{3}
}

func (m *SearchResults) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SearchResults.Unmarshal(m, b)
}
func (m *SearchResults) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SearchResults.Marshal(b, m, deterministic)
}
func (m *SearchResults) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SearchResults.Merge(m, src)
}
func (m *SearchResults) XXX_Size() int {
	return xxx_messageInfo_SearchResults.Size(m)
}
func (m *SearchResults) XXX_DiscardUnknown() {
	xxx_messageInfo_SearchResults.DiscardUnknown(m)
}

var xxx_messageInfo_SearchResults proto.InternalMessageInfo

func (m *SearchResults) GetDocuments() []*Document {
	if m != nil {
		return m.Documents
	}
	return nil
}

func init() {
	proto.RegisterType((*Document)(nil), "proto.Document")
	proto.RegisterType((*IndexRequest)(nil), "proto.IndexRequest")
	proto.RegisterType((*SearchQuery)(nil), "proto.SearchQuery")
	proto.RegisterType((*SearchResults)(nil), "proto.SearchResults")
}

func init() { proto.RegisterFile("search.proto", fileDescriptor_453745cff914010e) }

var fileDescriptor_453745cff914010e = []byte{
	// 230 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x8e, 0xc1, 0x4a, 0x03, 0x31,
	0x10, 0x86, 0xd9, 0x95, 0xd4, 0x76, 0x1a, 0x15, 0xc6, 0x1e, 0xc2, 0x9e, 0x4a, 0xbc, 0x88, 0x62,
	0xc1, 0xea, 0x4d, 0xf0, 0xa4, 0x07, 0x8f, 0xc6, 0x27, 0xd0, 0x64, 0xd0, 0x82, 0x49, 0xda, 0x4d,
	0x02, 0xf6, 0xed, 0xc5, 0x24, 0xab, 0x15, 0x7a, 0x4a, 0xe6, 0xe3, 0x9f, 0x7f, 0x3e, 0xe0, 0x81,
	0x5e, 0x7b, 0xfd, 0xb1, 0x58, 0xf7, 0x3e, 0x7a, 0x64, 0xf9, 0xe9, 0xb8, 0xf6, 0xd6, 0x7a, 0x57,
	0xa0, 0xbc, 0x85, 0xf1, 0x83, 0xd7, 0xc9, 0x92, 0x8b, 0x78, 0x0c, 0xed, 0xca, 0x88, 0x66, 0xde,
	0x9c, 0x4f, 0x54, 0xbb, 0x32, 0x28, 0xe0, 0x50, 0x7b, 0x17, 0xc9, 0x45, 0xd1, 0x66, 0x38, 0x8c,
	0xf2, 0x0e, 0xf8, 0x93, 0x33, 0xf4, 0xa5, 0x68, 0x93, 0x28, 0x44, 0xbc, 0x84, 0xb1, 0xa9, 0x2d,
	0x79, 0x7f, 0xba, 0x3c, 0x29, 0xfd, 0x8b, 0xa1, 0x5c, 0xfd, 0x06, 0xe4, 0x19, 0x4c, 0x5f, 0xb2,
	0xd7, 0x73, 0xa2, 0x7e, 0x8b, 0x33, 0x60, 0x9b, 0x9f, 0x4f, 0x3d, 0x5c, 0x06, 0x79, 0x0f, 0x47,
	0x25, 0xa4, 0x28, 0xa4, 0xcf, 0x18, 0xf0, 0x0a, 0x26, 0x43, 0x43, 0x10, 0xcd, 0xfc, 0x60, 0xdf,
	0x8d, 0xbf, 0xc4, 0xf2, 0x1d, 0x46, 0x65, 0x1f, 0x2f, 0x80, 0x65, 0x57, 0x3c, 0xad, 0xf1, 0x5d,
	0xf3, 0x8e, 0x57, 0xf8, 0x68, 0xd7, 0x71, 0x8b, 0xd7, 0xc0, 0x8a, 0x14, 0x56, 0xbc, 0x23, 0xda,
	0xcd, 0xfe, 0xb1, 0xea, 0xf5, 0x36, 0xca, 0xf0, 0xe6, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x92,
	0x2a, 0xa7, 0x6c, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// SearchClient is the client API for Search service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SearchClient interface {
	Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*Empty, error)
	Query(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (*SearchResults, error)
}

type searchClient struct {
	cc *grpc.ClientConn
}

func NewSearchClient(cc *grpc.ClientConn) SearchClient {
	return &searchClient{cc}
}

func (c *searchClient) Index(ctx context.Context, in *IndexRequest, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/proto.Search/Index", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searchClient) Query(ctx context.Context, in *SearchQuery, opts ...grpc.CallOption) (*SearchResults, error) {
	out := new(SearchResults)
	err := c.cc.Invoke(ctx, "/proto.Search/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SearchServer is the server API for Search service.
type SearchServer interface {
	Index(context.Context, *IndexRequest) (*Empty, error)
	Query(context.Context, *SearchQuery) (*SearchResults, error)
}

func RegisterSearchServer(s *grpc.Server, srv SearchServer) {
	s.RegisterService(&_Search_serviceDesc, srv)
}

func _Search_Index_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IndexRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServer).Index(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Search/Index",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServer).Index(ctx, req.(*IndexRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Search_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SearchQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearchServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Search/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearchServer).Query(ctx, req.(*SearchQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _Search_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Search",
	HandlerType: (*SearchServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Index",
			Handler:    _Search_Index_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _Search_Query_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "search.proto",
}
